# File names which should be inputs to this benchmark.
# Unix-style globbing is supported.
input:
    config:
    - ../raw/umath-python.yml
    - ../raw/umath-native.yml

aggregation: mean

# Axis and series column names
axis:
    - Mode
    - Size
    - Function

series:
     - Prefix
     - Implementation

# Expected series values in expected order.
# The earlier it appears in the list, the slower it is.
#expected:
#- [StockPython]
#- [IntelPython]
#- [Native-C]

# Create another table (or Excel filter) for each value in these columns
variants:
    - Arch

# Are higher values better?
higher-is-better: false

# Value columns
values:
    #- "CPE"
    - Ratio

# Precompute columns using lambda functions
precomputed:
    Domain: "'Numpy'"
    Ratio: "1 / ratio_of('CPE', Prefix='Native-C', Implementation='VML')"

# Filter: require certain values for columns (after precompute and rename)
filter-in:
    Implementation:
    - numpy
    #- numba
    - numexpr
    #- VML

# Number format in Python str.format() style, or the number of digits of
# precision to show in numbers in pretty-printed pivot tables
number-format: 3

# Do we figure out the number of decimals only once, using the max value,
# and disregard smaller precision numbers?
#number-format-max-only: true

